<UserControl x:Class="LabControllerSim.Modules.BoardSimulator.Views.BoardSimulatorUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"       
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:beh="clr-namespace:LabControllerSim.Core;assembly=LabControllerSim.Core"
             xmlns:local="clr-namespace:LabControllerSim.Modules.BoardSimulator"
             xmlns:viewmodels="clr-namespace:LabControllerSim.Modules.BoardSimulator.ViewModels" 
             mc:Ignorable="d"
             prism:ViewModelLocator.AutoWireViewModel="True"
             >
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <Menu.Items>
                <MenuItem Header="Symulator" DataContext="{Binding Simulator}">
                    <MenuItem Header="Symulator obiektów" Command="{Binding OpenObjectSimulatorCommand}"/>
                    <MenuItem Header="Symulator konsoli" Command="{Binding OpenConsoleSimulatorCommand}"/>
                </MenuItem>
                <MenuItem Header="Pomoc" DataContext="{Binding Help}">
                    <MenuItem Header="Pomoc" Command="{Binding HelpCommand}"/>
                </MenuItem>
            </Menu.Items>
        </Menu>

        <Grid DockPanel.Dock="Top" Height="40" Margin="20 10 20 10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Text="Cykl (ms):" HorizontalAlignment="Center" />
                <TextBox MaxLength="4" PreviewTextInput="NumberValidationTextBox" Grid.Row="1" Text="{Binding Cykl}" TextAlignment="Center"  IsEnabled="{Binding StartButton.IsEnabled}"/>
            </Grid>
            <Button Grid.Column="0" Content="Wybierz program.." Height="20" Padding="15 0 15 0" HorizontalAlignment="Center" DataContext="{Binding File}"  Command="{Binding SelectProgramFileCommand}"></Button>
            <TextBlock Grid.Column="1" Text="{Binding File.Info}"/>
        </Grid>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
            <Label Grid.Column="0" Grid.Row="0" HorizontalContentAlignment="Center">L1</Label>
            <Label Grid.Column="1" Grid.Row="0" HorizontalContentAlignment="Center">L2</Label>
            <Label Grid.Column="2" Grid.Row="0" HorizontalContentAlignment="Center">L3</Label>
            <Label Grid.Column="3" Grid.Row="0" HorizontalContentAlignment="Center">L4</Label>
            <Label Grid.Column="4" Grid.Row="0" HorizontalContentAlignment="Center">L5</Label>
            <Label Grid.Column="5" Grid.Row="0" HorizontalContentAlignment="Center">L6</Label>
            <Label Grid.Column="6" Grid.Row="0" HorizontalContentAlignment="Center">L7</Label>
            <Label Grid.Column="7" Grid.Row="0" HorizontalContentAlignment="Center">L8</Label>

            <Ellipse DataContext="{Binding Diode}" Fill="{Binding L1Fill}"  Height="30"  Width="30"  StrokeThickness="1"  Stroke="Black" Grid.Column="0" Grid.Row="0"/>
        <Ellipse DataContext="{Binding Diode}" Fill="{Binding L2Fill}"  Height="30"  Width="30"  StrokeThickness="1"  Stroke="Black" Grid.Column="1" Grid.Row="0"/>
        <Ellipse DataContext="{Binding Diode}" Fill="{Binding L3Fill}"  Height="30"  Width="30"  StrokeThickness="1"  Stroke="Black" Grid.Column="2" Grid.Row="0"/>
        <Ellipse DataContext="{Binding Diode}" Fill="{Binding L4Fill}"  Height="30"  Width="30"  StrokeThickness="1"  Stroke="Black" Grid.Column="3" Grid.Row="0"/>
        <Ellipse DataContext="{Binding Diode}" Fill="{Binding L5Fill}"  Height="30"  Width="30"  StrokeThickness="1"  Stroke="Black" Grid.Column="4" Grid.Row="0"/>
        <Ellipse DataContext="{Binding Diode}" Fill="{Binding L6Fill}"  Height="30"  Width="30"  StrokeThickness="1"  Stroke="Black" Grid.Column="5" Grid.Row="0"/>
        <Ellipse DataContext="{Binding Diode}" Fill="{Binding L7Fill}"  Height="30"  Width="30"  StrokeThickness="1"  Stroke="Black" Grid.Column="6" Grid.Row="0"/>
        <Ellipse DataContext="{Binding Diode}" Fill="{Binding L8Fill}"  Height="30"  Width="30"  StrokeThickness="1"  Stroke="Black" Grid.Column="7" Grid.Row="0"/>
        <Button Cursor="Hand" Height="30" Width="30"  Grid.Column="0" Grid.Row="1" Content="aK1" Background="{Binding ButtonAK.AK1Background}" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown" >
                    <prism:InvokeCommandAction Command="{Binding MouseLeftButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                    <prism:InvokeCommandAction Command="{Binding MouseLeftButtonUpCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                    <prism:InvokeCommandAction Command="{Binding MouseRightButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <Button Cursor="Hand" Height="30" Width="30"  Grid.Column="1" Grid.Row="1" Content="aK2"  Background="{Binding ButtonAK.AK2Background}" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <prism:InvokeCommandAction Command="{Binding MouseLeftButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                    <prism:InvokeCommandAction Command="{Binding MouseLeftButtonUpCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                    <prism:InvokeCommandAction Command="{Binding MouseRightButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <Button Cursor="Hand" Height="30" Width="30"  Grid.Column="2" Grid.Row="1" Content="aK3"  Background="{Binding ButtonAK.AK3Background}" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <prism:InvokeCommandAction Command="{Binding MouseLeftButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                    <prism:InvokeCommandAction Command="{Binding MouseLeftButtonUpCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                    <prism:InvokeCommandAction Command="{Binding MouseRightButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <Button Cursor="Hand" Height="30" Width="30"  Grid.Column="3" Grid.Row="1" Content="aK4"  Background="{Binding ButtonAK.AK4Background}" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <prism:InvokeCommandAction Command="{Binding MouseLeftButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                    <prism:InvokeCommandAction Command="{Binding MouseLeftButtonUpCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                    <prism:InvokeCommandAction Command="{Binding MouseRightButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
            <Button Cursor="Hand" Height="30" Width="30"  Grid.Column="4" Grid.Row="1" Content="aK5"  Background="{Binding ButtonAK.AK5Background}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                        <prism:InvokeCommandAction Command="{Binding MouseLeftButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                        <prism:InvokeCommandAction Command="{Binding MouseLeftButtonUpCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                        <prism:InvokeCommandAction Command="{Binding MouseRightButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Cursor="Hand" Height="30" Width="30"  Grid.Column="5" Grid.Row="1" Content="aK6"  Background="{Binding ButtonAK.AK6Background}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                        <prism:InvokeCommandAction Command="{Binding MouseLeftButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                        <prism:InvokeCommandAction Command="{Binding MouseLeftButtonUpCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                        <prism:InvokeCommandAction Command="{Binding MouseRightButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Cursor="Hand" Height="30" Width="30"  Grid.Column="6" Grid.Row="1" Content="aK7"  Background="{Binding ButtonAK.AK7Background}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                        <prism:InvokeCommandAction Command="{Binding MouseLeftButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                        <prism:InvokeCommandAction Command="{Binding MouseLeftButtonUpCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                        <prism:InvokeCommandAction Command="{Binding MouseRightButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Cursor="Hand" Height="30" Width="30"  Grid.Column="7" Grid.Row="1" Content="aK8"  Background="{Binding ButtonAK.AK8Background}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                        <prism:InvokeCommandAction Command="{Binding MouseLeftButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                        <prism:InvokeCommandAction Command="{Binding MouseLeftButtonUpCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                        <prism:InvokeCommandAction Command="{Binding MouseRightButtonDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Content}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Height="20" Padding="15 0 15 0" Margin="10 0 10 0" Command="{Binding StopButtonCommand}"  Grid.Column="6" Grid.Row="2"  Grid.ColumnSpan="2" Content="Stop"></Button>
            <Button Height="20" Padding="15 0 15 0" Margin="10 0 10 0" Command="{Binding StartButtonCommand}" Grid.Column="4" Grid.Row="2" Grid.ColumnSpan="2" Content="Start"></Button>

    </Grid>
    </DockPanel>
</UserControl>
